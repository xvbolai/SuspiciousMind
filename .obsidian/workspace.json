{
  "main": {
    "id": "04009dd1d19a32b2",
    "type": "split",
    "children": [
      {
        "id": "a94d967a33b8617a",
        "type": "tabs",
        "children": [
          {
            "id": "b7ddf400d771324a",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "B. Forge/Leetcode 算法总结/数据结构/Leetcode 2530. 执行 K 次操作后的最大分数(堆排序).md",
                "mode": "source",
                "backlinks": true,
                "source": false
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "7c31679c80f83b10",
    "type": "split",
    "children": [
      {
        "id": "b611edcc6769ed01",
        "type": "tabs",
        "children": [
          {
            "id": "0b46f2b6ce6e90df",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "f067abea8e99f2dd",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "- 1",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "fddf80e670fc48de",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 525.5
  },
  "right": {
    "id": "71aadca8ac892128",
    "type": "split",
    "children": [
      {
        "id": "4bad4c8fd3c95ddb",
        "type": "tabs",
        "children": [
          {
            "id": "df855176968c8248",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "B. Forge/Leetcode 算法总结/数据结构/Leetcode 2530. 执行 K 次操作后的最大分数(堆排序).md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "2f4fe7d10002faf0",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "B. Forge/Leetcode 算法总结/数据结构/Leetcode 2530. 执行 K 次操作后的最大分数(堆排序).md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "f54be98754ff6d16",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "c597bdea3e9399cd",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "B. Forge/Leetcode 算法总结/数据结构/Leetcode 2530. 执行 K 次操作后的最大分数(堆排序).md"
              }
            }
          },
          {
            "id": "9dac19313bb25512",
            "type": "leaf",
            "state": {
              "type": "todo",
              "state": {}
            }
          },
          {
            "id": "5b6a2e4814702901",
            "type": "leaf",
            "state": {
              "type": "calendar",
              "state": {}
            }
          },
          {
            "id": "5066256264e9ec2f",
            "type": "leaf",
            "state": {
              "type": "advanced-tables-toolbar",
              "state": {}
            }
          },
          {
            "id": "e9d791b988cd22c6",
            "type": "leaf",
            "state": {
              "type": "all-properties",
              "state": {
                "sortOrder": "frequency"
              }
            }
          }
        ],
        "currentTab": 1
      }
    ],
    "direction": "horizontal",
    "width": 200,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "code-files:Create Code File": false,
      "switcher:打开快速切换": false,
      "graph:查看关系图谱": false,
      "canvas:新建白板": false,
      "daily-notes:打开/创建今天的日记": false,
      "templates:插入模板": false,
      "command-palette:打开命令面板": false,
      "publish:发布更改": false,
      "workspaces:管理工作区布局": false,
      "audio-recorder:开始/结束录音": false,
      "random-note:开始漫游笔记": false,
      "zk-prefixer:创建时间戳笔记": false,
      "markdown-importer:打开 Markdown 格式转换器": false,
      "templater-obsidian:Templater": false,
      "table-editor-obsidian:Advanced Tables Toolbar": false,
      "remotely-save:Remotely Save": false
    }
  },
  "active": "b7ddf400d771324a",
  "lastOpenFiles": [
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 2560. 打家劫舍 IV(二分+dp).md",
    "B. Forge/Leetcode 算法总结/数据结构/Leetcode 2530. 执行 K 次操作后的最大分数(堆排序).md",
    "Day Planners/Day Planner-20231018.md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 2538. 最大价值和与最小价值和的差值(树的直径变种).md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 2518. 好分区的数目(0-1背包).md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 2407. 最长递增子序列 II.md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 2376. 统计特殊整数(数位DP).md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 2312. 卖木头块(线性DP).md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 2305. 公平分发饼干(子集状态DP).md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 2272. 最大波动的子字符串(线性 DP).md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 2246. 相邻字符不同的最长路径(树形dp 树的直径).md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 2218. 从栈中取出 K 个硬币的最大面值和(分组背包).md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 2209. 用地毯覆盖后的最少白色砖块(线性DP).md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 2188. 完成比赛的最少时间.md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 2172. 数组的最大与和(状态DP).md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 1742. 盒子中小球的最大数量(数位DP).md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 1713. 得到子序列的最少操作次数(LCS LIS).md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 1483. 树节点的第 K 个祖先(Binary Lifting).md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 1444. 切披萨的方案数.md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 1388. 3n 块披萨(打家劫舍Ⅱ).md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 1079. 活字印刷.md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 1039. 多边形三角剖分的最低得分(区间dp).md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 902. 最大为 N 的数字组合.md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 494. 目标和(0-1背包，恰好体积为v价值最大和w).md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 337. 打家劫舍 III(树形dp).md",
    "B. Forge/Leetcode 算法总结/动态规划/Leetcode 322. 零钱兑换(完全背包).md",
    "D. Knowledge/image/Pasted image 20231016215948.png",
    "D. Knowledge/image/Pasted image 20231016215912.png",
    "D. Knowledge/image/Pasted image 20231016215838.png",
    "D. Knowledge/image/Pasted image 20231016215637.png",
    "D. Knowledge/image/Pasted image 20231016215530.png",
    "D. Knowledge/image/Pasted image 20231016215504.png",
    "D. Knowledge/image/Pasted image 20231016215312.png",
    "D. Knowledge/image/Pasted image 20231016215242.png",
    "D. Knowledge/image/Pasted image 20231016095422.png",
    "D. Knowledge/image/Pasted image 20231013163707.png",
    "B. Forge/Compiler Optimization/tvm_mlir_learn-main/scheduler/vectorize.py",
    "B. Forge/Compiler Optimization/tvm_mlir_learn-main.zip",
    "B. Forge/Compiler Optimization/tvm_mlir_learn-main/torchscript/trace.py",
    "B. Forge/Compiler Optimization/tvm_mlir_learn-main/torchscript/script.py",
    "B. Forge/Compiler Optimization/tvm_mlir_learn-main/torchscript/loop_trace_onnx.py",
    "B. Forge/Compiler Optimization/tvm_mlir_learn-main/torchscript/loop_script_onnx.py",
    "B. Forge/Compiler Optimization/tvm_mlir_learn-main/torchscript",
    "B. Forge/Compiler Optimization/tvm_mlir_learn-main/scheduler/unroll.py",
    "B. Forge/Compiler Optimization/tvm_mlir_learn-main/scheduler/tile.py",
    "B. Forge/Compiler Optimization/tvm_mlir_learn-main/scheduler/tensor_expr_get_started.py",
    "Daily/未命名.canvas",
    "未命名.canvas"
  ]
}